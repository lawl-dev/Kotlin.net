package KotlinDotNet.lexer

class Tokens {
    companion object {
        val package_keyword = Token.HardKeywordToken("package")
        val as_keyword = Token.HardKeywordToken("as")
        val typealias_keyword = Token.HardKeywordToken("typealias")
        val class_keyword = Token.HardKeywordToken("class")
        val this_keyword = Token.HardKeywordToken("this")
        val super_keyword = Token.HardKeywordToken("super")
        val val_keyword = Token.HardKeywordToken("val")
        val var_keyword = Token.HardKeywordToken("var")
        val fun_keyword = Token.HardKeywordToken("fun")
        val for_keyword = Token.HardKeywordToken("for")
        val null_keyword = Token.HardKeywordToken("null")
        val true_keyword = Token.HardKeywordToken("true")
        val false_keyword = Token.HardKeywordToken("false")
        val is_keyword = Token.HardKeywordToken("is")
        val throw_keyword = Token.HardKeywordToken("throw")
        val return_keyword = Token.HardKeywordToken("return")
        val break_keyword = Token.HardKeywordToken("break")
        val continue_keyword = Token.HardKeywordToken("continue")
        val object_keyword = Token.HardKeywordToken("object")
        val if_keyword = Token.HardKeywordToken("if")
        val try_keyword = Token.HardKeywordToken("try")
        val else_keyword = Token.HardKeywordToken("else")
        val while_keyword = Token.HardKeywordToken("while")
        val do_keyword = Token.HardKeywordToken("do")
        val when_keyword = Token.HardKeywordToken("when")
        val interface_keyword = Token.HardKeywordToken("interface")

        val file_keyword = Token.SoftKeywordOrSymbolToken("file")
        val field_keyword = Token.SoftKeywordOrSymbolToken("field")
        val property_keyword = Token.SoftKeywordOrSymbolToken("property")
        val receiver_keyword = Token.SoftKeywordOrSymbolToken("receiver")
        val param_keyword = Token.SoftKeywordOrSymbolToken("param")
        val setparam_keyword = Token.SoftKeywordOrSymbolToken("setparam")
        val delegate_keyword = Token.SoftKeywordOrSymbolToken("delegate")
        val import_keyword = Token.SoftKeywordOrSymbolToken("import")
        val where_keyword = Token.SoftKeywordOrSymbolToken("where")
        val by_keyword = Token.SoftKeywordOrSymbolToken("by")
        val get_keyword = Token.SoftKeywordOrSymbolToken("get")
        val set_keyword = Token.SoftKeywordOrSymbolToken("set")
        val constructor_keyword = Token.SoftKeywordOrSymbolToken("constructor")
        val init_keyword = Token.SoftKeywordOrSymbolToken("init")

        val finally_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("finally")
        val abstract_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("abstract")
        val enum_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("enum")
        val open_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("open")
        val inner_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("inner")
        val override_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("override")
        val private_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("private")
        val public_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("public")
        val internal_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("internal")
        val protected_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("protected")
        val catch_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("catch")
        val out_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("out")
        val vararg_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("vararg")
        val reified_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("reified")
        val dynamic_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("dynamic")
        val companion_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("companion")
        val sealed_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("sealed")
        val final_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("final")
        val data_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("data")
        val inline_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("inline")
        val noinline_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("noinline")
        val tailrec_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("tailrec")
        val external_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("external")
        val annotation_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("annotation")
        val crossinline_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("crossinline")
        val operator_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("operator")
        val infix_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("infix")
        val const_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("const")
        val suspend_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("suspend")
        val header_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("header")
        val impl_ModifierKeyword = Token.SoftKeywordModifierOrSymbolToken("impl")
    }
}